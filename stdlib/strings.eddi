struct string {
    char[] data;

    this(str raw){
        data = new char[length(raw)];

        for(int i = 0; i < length(raw); ++i){
            data[i] = raw[i];
        }
    }
    
    ~this(){
        delete data;
    }

    int size(){
        return size(data);
    }

    bool equals(string other){
        if(this.size() != other.size()){
            return false;
        }

        for(int i = 0; i < this.size(); ++i){
            if(data[i] != other.data[i]){
                return false;
            }
        }

        return true;
    }

    void append(string other){
        char[] new_data = new char[size() + other.size()];

        for(int i = 0; i < this.size(); ++i){
            new_data[i] = data[i];
        }
        
        for(int i = this.size(); i < this.size() + other.size(); ++i){
            new_data[i] = other.data[i - this.size()];
        }

        delete data;
        data = new_data;
    }
}

void print(string s){
    for(int i = 0; i < s.size(); ++i){
        print(s.data[i]);
    }
}

bool str_equals(str a, str b){
    if(length(a) != length(b)){
        return false;
    }

    for(int i = 0; i < length(a); ++i){
        if(a[i] != b[i]){
            return false;
        }
    }

    return true;
}
