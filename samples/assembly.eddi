//Global Variables
int ga = 1000;
string gb = "Global Variable b"; 

//Global variables with default values
int defaultA;
string defaultB;

//Global array
int globalArrayA[10];
string globalArrayB[10];

//Global unused variable
int globalUnused = 2222;

void main(){
    test(1234);

    int localUnused = 8989;

    string x = "ED" + "DI";
    println(x);

    print("Should print '0' : ");
    println(defaultA);

    print("Should print '' : ");
    println(defaultB);

    int defaultLA;
    string defaultLB;

    print("Should print '0' : ");
    println(defaultLA);

    print("Should print '' : ");
    println(defaultLB);

    print("Should print '1000' : ");
    println(ga);

    print("Should print 'Global Variable b' : ");
    println(gb);

    ga = 2000;
    print("Should print '2000' : ");
    println(ga);

    gb = "New value";
    print("Should print 'New value' : ");
    println(gb);

    string a = "Variable a";
    print("Should print 'Variable a' : ");
    println(a);

    a = "New variable a";
    print("Should print 'New variable a' : ");
    println (a);

    string b = "Variable b";
    print("Should print 'Variable b' : ");
    println(b);

    b = a;
    print("Should print 'New variable a' : ");
    println(b);

    string e = "Variable e";
    string f = "Variable f";

    f <=> e;

    print("Should print 'Variable e' : ");
    println(f);
    print("Should print 'Variable f' : ");
    println(e);
    
    string z = e + f;

    print("Should print 'Variable fVariable e' : ");
    println(z);

    int zaz = 111;
    int zbz = 222;

    zaz <=> zbz;

    print("Should print '111' : ");
    println(zbz);

    print("Should print '222' : ");
    println(zaz);

    int c = 1111;
    println(c);

    c = 2222;
    println(c);

    int d = 3333;
    println(d);

    d = c;
    println(d);

    print("2222 + 2222 = ");
    println(c + d);

    print("2000 * 5 = ");
    println(ga * 5);

    print("666 + 333 = ");
    println(666 + 333);

    print("10 * 33 = ");
    println(10 * 33);
    
    print("111 * 2 = ");
    println(111 * 2);
    
    print("444 * 33 = ");
    println(444 * 33);

    print("444 * 333 = ");
    println(444 * 333);

    print("122 / 2 = ");
    println(122 / 2);

    print("2000 / 3 = ");
    println(2000 / 3);
    
    print("123 / 2 = ");
    println(123 / 2);
    
    print("1222 / 7 = ");
    println(1222 / 7);

    print("7 % 5 = ");
    println(7 % 5);
    
    print("28 % 4 = ");
    println(28 % 4);

    print("444 - 333 = ");
    println(444 - 333);
    
    print("444 - 555 = ");
    println(444 - 555);

    print("((444 - 333) * (2)) = ");
    println(((444 - 333) * (2)));
    
    print("((444 - 333) * (2 - 5)) = ");
    println(((444 - 333) * (2 - 5)));
    
    print("((444 - 333) * (2 + 3)) = ");
    println(((444 - 333) * (2 + 3)));
    
    print("((4444 - 333) - (1222 / 7)) = ");
    println(((4444 - 333) - (1222 / 7)));
    
    print("((444 * 333) - (1222 / 7)) + (33 % 2) = ");
    println(((444 * 333) - (1222 / 7)) + (33 % 2));
    
    print("((444 * 333) - (1222 / 7)) + (33 % 2 + 300 - 199) = ");
    println(((444 * 333) - (1222 / 7)) + (33 % 2 + 300 - 199));

    if(4 > 3){
        string xa = "Cool";
        println(xa);
    } else {
        string xa = "Super pas cool";
        println(xa);
    }

    if(3 == 3){
        string xa = "Cool";
        println(xa);
    } else {
        println("Pas cool");
    }

    if(55 < 33){
        println("Pas cool");
    } else if(33 <= 11){
        println("Pas cool");
    } else {
        println("Cool");
    }

    int i = 0;
    while(i < 5){
        i = i + 1; //Could be increment
        print("While");
        println(i);
    }

    for(int zzz = 0; zzz < 5; zzz = zzz + 1){
        print("For");
        println(zzz);
    }
    
    for(int zzz = 0; zzz < 5; zzz = zzz + 1){
        test();
        test();
    }

    testGlobalArrays();
    testArrays();
   
    println("["); 
    testArray(globalArrayA);
    println("]");

    int arrayTest[22];
    arrayTest[5] = 1235813;
    
    println("["); 
    testArray(arrayTest);
    println("]");
}

void testArray(int[] array){
    println(array[5]);

    secondTest(array);
}

void secondTest(int[] array){
    println(array[5]);
}

/* Multiline comment 1  */

//Test function
void test(){
    string x = "test depuis method";

    println(x);

    println("Hello from test");
}

void test(int i){
    println(i);
}

void testGlobalArrays(){
    println(globalArrayA[3]);
    println(globalArrayB[3]);

    globalArrayA[5] = 998;
    println(globalArrayA[5]);

    globalArrayB[3] = "asdf";
    println(globalArrayB[3]);

    globalArrayA[3] = globalArrayA[5];
    println(globalArrayA[3]);

    foreach(int zuizui in globalArrayA){
        println(zuizui);
    }

    foreach(string zaizai in globalArrayB){
        println(zaizai);
    }
}

//Test function with arrays
void testArrays(){
    int array[12];
    array[3] = 0;
    println(array[3]);

    string second[10];
    second[3] = "asdf";
    println(second[3]);
}

void empty(int i){
    //Empty function
}

/* Multiline comment 2  */

/* 
  Multiline comment 3 
*/

/* 
 * Pseudo doc
 * Suite / * 
*/
